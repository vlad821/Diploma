import streamlit as st
import pandas as pd
from ydata_profiling import ProfileReport
from streamlit_pandas_profiling import st_profile_report
from gpt_helper import explain_with_gpt  # –¢–æ–±—ñ —Å–ª—ñ–¥ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏, —â–æ–± —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è –∫–æ—Ä–µ–∫—Ç–Ω–æ –ø—Ä–∞—Ü—é–≤–∞–ª–∞
import os

def app():
    st.title("üìä –ü—Ä–æ—Ñ–∞–π–ª—ñ–Ω–≥ –¥–∞–Ω–∏—Ö")

    if "data" not in st.session_state:
        st.warning("‚õî –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∞–Ω—ñ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –≤–∫–ª–∞–¥—Ü—ñ.")
        return

    df = st.session_state["data"]

    # GPT –ø–æ—è—Å–Ω–µ–Ω–Ω—è, —â–æ —Ç–∞–∫–µ –ø—Ä–æ—Ñ–∞–π–ª—ñ–Ω–≥
    st.info("üß† –©–æ —Ç–∞–∫–µ –ø—Ä–æ—Ñ–∞–π–ª—ñ–Ω–≥ –¥–∞–Ω–∏—Ö?")
    explain_with_gpt("–ü–æ—è—Å–Ω–∏, —â–æ —Ç–∞–∫–µ –ø—Ä–æ—Ñ–∞–π–ª—ñ–Ω–≥ –¥–∞–Ω–∏—Ö —É –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –∞–Ω–∞–ª—ñ–∑—É –¥–∞–Ω–∏—Ö —Ç–∞ —è–∫—ñ –ø–µ—Ä–µ–≤–∞–≥–∏ –≤—ñ–Ω –Ω–∞–¥–∞—î.")

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ—Ñ—ñ–ª—é
    st.subheader("üìÑ –ó–≤—ñ—Ç Pandas Profiling")
    profile = ProfileReport(df, title="Pandas Profiling Report", explorative=True)

    # –ü–æ–∫–∞–∑–∞—Ç–∏ –∑–≤—ñ—Ç —É Streamlit
    st_profile_report(profile)

    # –ü–æ—è—Å–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø—Ä–æ—Ñ—ñ–ª—é
    st.subheader("üß† –ü–æ—è—Å–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")

    # –û—Ç—Ä–∏–º—É—î–º–æ –æ–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é
    summary = profile.get_description()

    # –í–∏—Ç—è–≥—É—î–º–æ –∫–ª—é—á–æ–≤—ñ –º–æ–º–µ–Ω—Ç–∏ –¥–ª—è –ø–æ—è—Å–Ω–µ–Ω–Ω—è
    variables = summary.variables if hasattr(summary, 'variables') else {}
    missing = summary.missing if hasattr(summary, 'missing') else {}
    duplicates = summary.duplicates if hasattr(summary, 'duplicates') else {}
    alerts = summary.alerts if hasattr(summary, 'alerts') else []
    correlations = summary.correlations if hasattr(summary, 'correlations') else {}

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—ñ—Ç –¥–ª—è –ø–æ—è—Å–Ω–µ–Ω–Ω—è
    explanation = f"""
    –û—Å–Ω–æ–≤–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—é:
    
    - **–ó–º—ñ–Ω–Ω—ñ**: –Ñ {len(variables)} –∑–º—ñ–Ω–Ω–∏—Ö —É –Ω–∞–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö.
    - **–ü—Ä–æ–ø—É—â–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è**: {', '.join([key for key in missing.get('variables', {}).keys()]) if missing.get('variables') else '–Ω–µ–º–∞—î'} –∑–º—ñ–Ω–Ω–∏—Ö –∑ –ø—Ä–æ–ø—É—â–µ–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.
    - **–î—É–±–ª—ñ–∫–∞—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è**: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤: {duplicates.get('count', '–ù–µ–≤—ñ–¥–æ–º–æ')}.
    - **–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è**: –í–∏—è–≤–ª–µ–Ω–æ {len(alerts)} –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å.
    - **–ö–æ—Ä–µ–ª—è—Ü—ñ—ó**: –¢–∏–ø–∏ –∫–æ—Ä–µ–ª—è—Ü—ñ–π: {', '.join(correlations.keys()) if correlations else '–≤—ñ–¥—Å—É—Ç–Ω—ñ'}.

    –ß–∏ —î —è–∫—ñ-–Ω–µ–±—É–¥—å –∞–Ω–æ–º–∞–ª—ñ—ó —á–∏ –≤–∞–∂–ª–∏–≤—ñ –ø–∞—Ç–µ—Ä–Ω–∏, –Ω–∞ —è–∫—ñ —Å–ª—ñ–¥ –∑–≤–µ—Ä–Ω—É—Ç–∏ —É–≤–∞–≥—É?
    """

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ü–µ–π –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—ñ—Ç GPT –¥–ª—è –ø–æ—è—Å–Ω–µ–Ω–Ω—è
    response = explain_with_gpt(f"–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ü—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: {explanation}")

    # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –≤—ñ–¥ GPT
    st.write(response)

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–≤—ñ—Ç—É –≤ HTML
    output_path = "temp/pandas_profiling_report.html"
    os.makedirs("temp", exist_ok=True)
    profile.to_file(output_path)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    with open(output_path, "rb") as f:
        st.download_button(
            label="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–≤—ñ—Ç —É —Ñ–æ—Ä–º–∞—Ç—ñ HTML",
            data=f,
            file_name="pandas_profiling_report.html",
            mime="text/html"
        )
