import streamlit as st
import pandas as pd
import io
import openai
from gpt_helper import explain_with_gpt  # –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è —ñ—Å–Ω—É—î —É –≤–∞—à–æ–º—É –ø—Ä–æ—î–∫—Ç—ñ

def app():
    st.title("üìä –ó–≤–µ–¥–µ–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ (Pivot Table)")

    if "data" not in st.session_state or st.session_state["data"] is None:
        st.warning("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∞–Ω—ñ.")
        return

    df = st.session_state["data"]

    st.write("### ‚ûï –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–≤–µ–¥–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ")

    rows = st.multiselect("üß± –†—è–¥–∫–∏ (index):", options=df.columns)
    cols = st.multiselect("üìä –ö–æ–ª–æ–Ω–∫–∏ (columns):", options=df.columns)
    values = st.multiselect("üìà –ó–Ω–∞—á–µ–Ω–Ω—è (values):", options=df.columns)
    aggfunc = st.selectbox("üìê –ê–≥—Ä–µ–≥–∞—Ü—ñ—è:", options=["sum", "mean", "count", "min", "max"])

    if st.button("üì§ –ü–æ–±—É–¥—É–≤–∞—Ç–∏ –∑–≤–µ–¥–µ–Ω—É —Ç–∞–±–ª–∏—Ü—é"):
        try:
            pivot = pd.pivot_table(
                df,
                index=rows,
                columns=cols,
                values=values,
                aggfunc=aggfunc
            )
            st.success("‚úÖ –ó–≤–µ–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü—è —É—Å–ø—ñ—à–Ω–æ –ø–æ–±—É–¥–æ–≤–∞–Ω–∞.")
            st.dataframe(pivot)

            # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Excel
            excel_buffer = io.BytesIO()
            with pd.ExcelWriter(excel_buffer, engine='xlsxwriter') as writer:
                pivot.to_excel(writer, index=True, sheet_name='Pivot Table')
            excel_buffer.seek(0)

            st.download_button(
                label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —è–∫ Excel",
                data=excel_buffer,
                file_name="pivot_table.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )

            # üìå –î–æ–¥–∞—Ç–∏ –ø–æ—è—Å–Ω–µ–Ω–Ω—è GPT
            if st.checkbox("üí° –ü–æ—è—Å–Ω–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–≤–µ–¥–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GPT"):
                prompt = (
                    f"–Ø –ø–æ–±—É–¥—É–≤–∞–≤ –∑–≤–µ–¥–µ–Ω—É —Ç–∞–±–ª–∏—Ü—é –∑–∞ —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:\n"
                    f"- –†—è–¥–∫–∏ (index): {rows}\n"
                    f"- –ö–æ–ª–æ–Ω–∫–∏ (columns): {cols}\n"
                    f"- –ó–Ω–∞—á–µ–Ω–Ω—è (values): {values}\n"
                    f"- –ê–≥—Ä–µ–≥–∞—Ü—ñ—è: {aggfunc}\n\n"
                    f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{pivot.head(5).to_string()}\n\n"
                    f"–ü–æ—è—Å–Ω–∏, —è–∫ –ø–æ–±—É–¥–æ–≤–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü—è, —â–æ –æ–∑–Ω–∞—á–∞—é—Ç—å —ó—ó —Ä—è–¥–∏ —Ç–∞ –∫–æ–ª–æ–Ω–∫–∏, —ñ —è–∫ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç—É–≤–∞—Ç–∏ —ó—ó –∑–Ω–∞—á–µ–Ω–Ω—è."
                )
                explain_with_gpt(prompt)

        except Exception as e:
            st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–≤–µ–¥–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ: {e}")
